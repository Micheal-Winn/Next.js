{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thantzinwin/Pictures/06-onwards-to-a-bigger-project-starting-project (1)/06-onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.js\";\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\nimport { MongoClient } from 'mongodb';\nexport default function NewMeetup() {\n  const addMeetupHandler = async enteredData => {\n    const response = await fetch('/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(enteredData)\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\nexport async function getServerSideProps() {\n  if (req.method === 'POST') {\n    const data = req.body;\n    const client = await MongoClient.connect('mongodb+srv://thantzinwin:11111111thant@cluster0.fdoirgi.mongodb.net/meetup?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetups');\n    const result = meetupCollection.insertOne(data);\n    console.log(result);\n    client.close();\n    res.status(201).json({\n      message: 'Insertion successful'\n    });\n  }\n}","map":{"version":3,"sources":["/home/thantzinwin/Pictures/06-onwards-to-a-bigger-project-starting-project (1)/06-onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.js"],"names":["NewMeetupForm","MongoClient","NewMeetup","addMeetupHandler","enteredData","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","getServerSideProps","req","client","connect","db","meetupCollection","collection","result","insertOne","close","res","status","message"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,eAAgB,SAASC,SAAT,GAAoB;AAChC,QAAMC,gBAAgB,GAAG,MAAOC,WAAP,IAAqB;AAC1C,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAD,EAAK;AAC7BC,MAAAA,MAAM,EAAG,MADoB;AAE7BC,MAAAA,OAAO,EAAE;AACL,wBAAiB;AADZ,OAFoB;AAK7BC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeP,WAAf;AALsB,KAAL,CAA5B;AAQA,UAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAXD;;AAaA,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAET;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AAED,OAAO,eAAea,kBAAf,GAAmC;AAElC,MAAGC,GAAG,CAACV,MAAJ,KAAe,MAAlB,EAAyB;AACrB,UAAMK,IAAI,GAAGK,GAAG,CAACR,IAAjB;AACA,UAAMS,MAAM,GAAG,MAAMjB,WAAW,CAACkB,OAAZ,CAAoB,yGAApB,CAArB;AAEA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,UAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,UAAMC,MAAM,GAAGF,gBAAgB,CAACG,SAAjB,CAA2BZ,IAA3B,CAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACAL,IAAAA,MAAM,CAACO,KAAP;AACAC,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB;AAACe,MAAAA,OAAO,EAAG;AAAX,KAArB;AACH;AAER","sourcesContent":["import NewMeetupForm from '../../components/meetups/NewMeetupForm'\nimport { MongoClient } from 'mongodb';\nexport default  function NewMeetup(){\n    const addMeetupHandler = async (enteredData)=>{\n        const response = await fetch('/',{\n            method : \"POST\",\n            headers :{\n                'Content-Type' : 'application/json'\n            },\n            body : JSON.stringify(enteredData)\n\n        })\n        const data = await response.json();\n        console.log(data)\n    }\n\n    return <NewMeetupForm onAddMeetup={addMeetupHandler} />\n}\n\nexport async function getServerSideProps(){\n    \n        if(req.method === 'POST'){\n            const data = req.body ;\n            const client = await MongoClient.connect('mongodb+srv://thantzinwin:11111111thant@cluster0.fdoirgi.mongodb.net/meetup?retryWrites=true&w=majority')\n    \n            const db = client.db();\n            const meetupCollection = db.collection('meetups')\n            const result = meetupCollection.insertOne(data);\n            console.log(result)\n            client.close();\n            res.status(201).json({message : 'Insertion successful'})\n        }\n    \n}"]},"metadata":{},"sourceType":"module"}